(* File generated by the BNF Converter (bnfc 2.9.5). *)

module SkelLBNF = struct

open AbsLBNF

type result = string

let failure x = failwith "Undefined case." (* x discarded *)

let rec transIdent (x : ident) : result = match x with
    Ident string -> failure x


and transGrammar (x : grammar) : result = match x with
    MkGrammar defs -> failure x


and transDef (x : def) : result = match x with
    Rule (label, cat, items) -> failure x
  | Comment string -> failure x
  | Comments (string0, string) -> failure x
  | Internal (label, cat, items) -> failure x
  | Token (ident, reg) -> failure x
  | PosToken (ident, reg) -> failure x
  | Entryp idents -> failure x
  | Separator (minimumsize, cat, string) -> failure x
  | Terminator (minimumsize, cat, string) -> failure x
  | Coercions (ident, integer) -> failure x
  | Rules (ident, rhss) -> failure x
  | Layout strings -> failure x
  | LayoutStop strings -> failure x
  | LayoutTop  -> failure x


and transItem (x : item) : result = match x with
    Terminal string -> failure x
  | NTerminal cat -> failure x


and transCat (x : cat) : result = match x with
    ListCat cat -> failure x
  | IdCat ident -> failure x


and transLabel (x : label) : result = match x with
    LabNoP labelid -> failure x
  | LabP (labelid, profitems) -> failure x
  | LabPF (labelid0, labelid, profitems) -> failure x
  | LabF (labelid0, labelid) -> failure x


and transLabelId (x : labelId) : result = match x with
    Id ident -> failure x
  | Wild  -> failure x
  | ListE  -> failure x
  | ListCons  -> failure x
  | ListOne  -> failure x


and transProfItem (x : profItem) : result = match x with
    ProfIt (intlists, integers) -> failure x


and transIntList (x : intList) : result = match x with
    Ints integers -> failure x


and transRHS (x : rHS) : result = match x with
    MkRHS items -> failure x


and transMinimumSize (x : minimumSize) : result = match x with
    MNonempty  -> failure x
  | MEmpty  -> failure x


and transReg (x : reg) : result = match x with
    RSeq (reg0, reg) -> failure x
  | RAlt (reg0, reg) -> failure x
  | RMinus (reg0, reg) -> failure x
  | RStar reg -> failure x
  | RPlus reg -> failure x
  | ROpt reg -> failure x
  | REps  -> failure x
  | RChar char -> failure x
  | RAlts string -> failure x
  | RSeqs string -> failure x
  | RDigit  -> failure x
  | RLetter  -> failure x
  | RUpper  -> failure x
  | RLower  -> failure x
  | RAny  -> failure x



end
